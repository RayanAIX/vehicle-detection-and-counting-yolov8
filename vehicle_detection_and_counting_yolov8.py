# -*- coding: utf-8 -*-
"""vehicle-detection-and-counting-yolov8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LUNu9-jqu_69dt6h_PevhG-ArvTOQnWX
"""

!pip install ultralytics opencv-python --quiet

from ultralytics import YOLO
import cv2

# Load YOLOv8 model (nano for speed; use 'yolov8s.pt' for more accuracy)
model = YOLO("yolov8n.pt")

# Open the video
video_path = "video.mp4"
cap = cv2.VideoCapture(video_path)

# Output video writer
fourcc = cv2.VideoWriter_fourcc(*"mp4v")
out = cv2.VideoWriter("output.mp4", fourcc, cap.get(cv2.CAP_PROP_FPS),
                      (int(cap.get(cv2.CAP_PROP_FRAME_WIDTH)), int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))))

while True:
    ret, frame = cap.read()
    if not ret:
        break

    # Run YOLOv8 detection
    results = model(frame, stream=True)

    vehicle_count = 0
    for r in results:
        boxes = r.boxes
        for box in boxes:
            cls = int(box.cls[0])
            # Vehicle class IDs in COCO: car=2, motorcycle=3, bus=5, truck=7
            if cls in [2, 3, 5, 7]:
                vehicle_count += 1
                x1, y1, x2, y2 = box.xyxy[0]
                conf = box.conf[0]
                cv2.rectangle(frame, (int(x1), int(y1)), (int(x2), int(y2)), (0, 255, 0), 2)
                cv2.putText(frame, f"{model.names[cls]} {conf:.2f}",
                            (int(x1), int(y1)-10), cv2.FONT_HERSHEY_SIMPLEX,
                            0.5, (255, 255, 255), 2)

    # Display vehicle count
    cv2.putText(frame, f"Vehicle Count: {vehicle_count}", (20, 40),
                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 3)

    # Save the frame
    out.write(frame)

cap.release()
out.release()
cv2.destroyAllWindows()
from google.colab import files
files.download("output.mp4")